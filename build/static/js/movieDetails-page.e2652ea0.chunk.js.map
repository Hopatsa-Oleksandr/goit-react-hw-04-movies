{"version":3,"sources":["service/api-service.js","image/noImage.png","components/MovieCard/MovieCard.module.scss","components/Cast/Cast.module.scss","components/Reviews/Reviews.module.scss","components/MovieCard/MovieCard.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","Views/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["API_KEY","axios","defaults","baseURL","params","api_key","getPopularMovies","pageFetch","get","then","response","data","getSearchMovies","name","getMoviesDetailsViews","id","getMoviesCastViews","getMoviesReviews","module","exports","MovieCard","movie","location","useLocation","url","useRouteMatch","poster_path","original_title","release_date","overview","vote_average","className","style","card","imageMovie","src","noImage","alt","content","title","text","category","genres","ulGenre","map","item","index","nav","list","to","pathname","state","from","link","activeClassName","activeLink","Cast","useState","casts","setCasts","movieId","useParams","useEffect","cast","catch","error","console","log","type","color","height","width","timeout","length","movieItem","original_name","profile_path","image","Reviews","review","setReview","results","wrapper","author","MovieDetailsPage","path","movies","setMovies","history","useHistory","onClick","push"],"mappings":"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","file":"static/js/movieDetails-page.e2652ea0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0d4e8a72aec64d2db9275b816bb7cbd6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getPopularMovies = (pageFetch = 1) => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${pageFetch}`)\n  .then(response => response.data);\n};\n\n\nconst getSearchMovies = (name) => {\n  return axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n  .then(response => response.data);\n};\n\nconst getMoviesDetailsViews = id => {\n  return axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nconst getMoviesCastViews = id => {\n  return axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nconst getMoviesReviews = id => {\n  return axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nexport { getPopularMovies, getSearchMovies, getMoviesDetailsViews, getMoviesCastViews, getMoviesReviews }\n\n\n","export default __webpack_public_path__ + \"static/media/noImage.0e049a38.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__31Gno\",\"imageMovie\":\"MovieCard_imageMovie__1DcBf\",\"content\":\"MovieCard_content__3wQ9c\",\"category\":\"MovieCard_category__3pGjO\",\"link\":\"MovieCard_link__yRl8A\",\"item\":\"MovieCard_item__1u59L\",\"activeLink\":\"MovieCard_activeLink__2XQ9O\",\"ulGenre\":\"MovieCard_ulGenre__1M51b\",\"list\":\"MovieCard_list__3DcO7\",\"nav\":\"MovieCard_nav__2hcaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cast_list__OKlox\",\"movieItem\":\"Cast_movieItem__33F8_\",\"title\":\"Cast_title__SVHQ5\",\"image\":\"Cast_image__s5Lgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__24B7I\",\"ReviewsList\":\"Reviews_ReviewsList__2Gcjd\",\"Item\":\"Reviews_Item__1ih_J\",\"NotReviews\":\"Reviews_NotReviews__1M6Le\"};","import { NavLink, useRouteMatch, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noImage from \"../../image/noImage.png\";\nimport style from './MovieCard.module.scss';\n\nconst MovieCard = ({ movie }) => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  const { poster_path, original_title, release_date, overview,  vote_average } = movie;\n\n  return (\n    <>\n      <hr />\n      <div className={style.card}>\n        <img\n          className={style.imageMovie}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : noImage\n          }\n          alt={original_title}\n        />\n        <div className={style.content}>\n          <h2 className={style.title}>{original_title}</h2>\n          <p className={style.text}>User Score: {vote_average * 10}%</p>\n          <p className={style.category}>Overview:</p>\n          <p className={style.text}>{overview}</p>\n\n          <p className={style.category}>Genres:</p>\n          {movie.genres && (\n            <ul className={style.ulGenre}>\n              {movie.genres.map((item, index) => (\n                <li key={index}>{item.name}</li>\n              ))}\n            </ul>\n          )}\n           {release_date && (\n              <>\n                <p className={style.text}>Date:</p>\n                <p className={style.text}>{release_date}</p>\n              </>\n            )}\n        </div>\n      </div>\n      <div className={style.nav}>\n        <p className={style.category}>Additional information</p>\n        <ul className={style.list}>\n          <li className={style.item}>\n            <NavLink\n              to={{\n                pathname: `${url}/cast`,\n                state: { from: location?.state?.from ?? '/' },\n              }}\n              className={style.link}\n              activeClassName={style.activeLink}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={style.item}>\n            <NavLink\n              to={{\n                pathname: `${url}/reviews`,\n                state: { from: location?.state?.from ?? '/' },\n              }}\n              className={style.link}\n              activeClassName={style.activeLink}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nexport default MovieCard;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\n\nimport noImage from '../../image/noImage.png';\nimport { getMoviesCastViews } from '../../service/api-service';\nimport style from './Cast.module.scss';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesCastViews(movieId)\n      .then(({ cast }) => {\n        setCasts(cast);\n      })\n      .catch(error => console.log('Error: ', error));\n    // .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <Loader\n        type=\"Hearts\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={2000}\n      />\n      {casts && casts.length > 0 ? (\n        <ul className={style.movieItem}>\n          {casts.map(({ original_name, id, profile_path }) => (\n            <li className={style.item} key={id}>\n              <img\n                className={style.image}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : noImage\n                }\n                alt={original_name ? original_name : `image`}\n                width=\"150\"\n                height=\"230\"\n              />\n              <h4 className={style.title}>\n                {original_name ? original_name : `No name`}\n              </h4>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No information</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n// import Loader from 'react-loader-spinner';\n\nimport {getMoviesReviews} from '../../service/api-service';\nimport style from './Reviews.module.scss';\n\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    getMoviesReviews(movieId)\n    .then(({data }) => setReview(data.results))\n    .catch(error => console.log('Error: ', error))\n    \n  }, [movieId]);\n\n  return (\n    <div className={style.wrapper}>\n    {review ? (\n      <>\n        <ul className={style.list}>\n          {review.map((item, index) => (\n            <li key={index} className={style.item}>\n              <p className={style.title}>Author: {item.author}</p>\n              <p> {item.content}</p>\n            </li>\n          ))}\n        </ul>\n      </>\n    ) : (\n      <p className={style.text}>No reviews to show</p>\n    )}\n  </div>\n);\n}\n\n\nexport default Reviews;","import { useState, useEffect } from 'react';\nimport { Route, useRouteMatch, useParams, useLocation, useHistory } from 'react-router-dom';\nimport { getMoviesDetailsViews } from \"../../service/api-service\";\n// import { toast } from 'react-toastify';\n// import routes from 'routes';\n \nimport MovieCard from '../../components/MovieCard';\nimport Cast from '../../components/Cast';\nimport Reviews from '../../components/Reviews';\n\n\n\n\nconst MovieDetailsPage = () => { \n  const { path } = useRouteMatch();\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState({});\n  const location = useLocation();\n  const history = useHistory();\n\n\n  useEffect(() => {\n    getMoviesDetailsViews(movieId).then(data => {\n      setMovies(data);\n    });\n  }, [movieId]);\n  \n  const handleButtonGoBack =() => {\n    return history.push(location?.state?.from || '/');\n  };\n\n  return (\n    <>\n          <button\n            type=\"button\"\n            onClick={handleButtonGoBack}\n          >\n            Go back\n          </button>\n\n          {movies && <MovieCard movie={movies} />}\n          \n          <Route path={`${path}:movieId/cast`}>\n        {movies && <Cast />}\n      </Route>\n\n      <Route path={`${path}:movieId/reviews`}>\n        {movies && <Reviews />}\n      </Route>\n    </>\n  )\n\n}\n\nexport default MovieDetailsPage;"],"sourceRoot":""}