{"version":3,"sources":["service/api-service.js","image/noImage.png","components/MoviesList/MoviesList.module.scss","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.module.scss","components/SearchBar/SearchBar.jsx","Views/MoviesPage/MoviesPage.jsx"],"names":["API_KEY","axios","defaults","baseURL","params","api_key","getPopularMovies","pageFetch","get","then","response","data","getSearchMovies","name","getMoviesDetailsViews","id","getMoviesCastViews","getMoviesReviews","module","exports","MoviesList","movies","title","location","useLocation","className","style","wrapper","list","map","poster_path","item","to","pathname","state","from","image","src","noImage","alt","SearchBar","onSubmit","useState","value","setValue","reset","Searchbar","event","preventDefault","trim","toast","error","SearchForm","type","SearchButton","SearchFormButton","SearchInput","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","MoviesPage","setMovies","isLoading","setIsLoading","history","useHistory","searchQuery","URLSearchParams","search","useEffect","results","length","queryMovie","push","Loader"],"mappings":"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","file":"static/js/movies-page.608853f0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0d4e8a72aec64d2db9275b816bb7cbd6';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getPopularMovies = (pageFetch = 1) => {\n  return axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${pageFetch}`)\n  .then(response => response.data);\n};\n\n\nconst getSearchMovies = (name) => {\n  return axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${name}&page=1&include_adult=false`)\n  .then(response => response.data);\n};\n\nconst getMoviesDetailsViews = id => {\n  return axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nconst getMoviesCastViews = id => {\n  return axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nconst getMoviesReviews = id => {\n  return axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n  .then(response => response.data);\n};\n\nexport { getPopularMovies, getSearchMovies, getMoviesDetailsViews, getMoviesCastViews, getMoviesReviews }\n\n\n","export default __webpack_public_path__ + \"static/media/noImage.0e049a38.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MoviesList_wrapper__2FJVO\",\"list\":\"MoviesList_list__1LAGo\",\"item\":\"MoviesList_item__1cY6w\",\"image\":\"MoviesList_image__37QAz\",\"link\":\"MoviesList_link__3nHKj\",\"title\":\"MoviesList_title__1tIAE\"};","import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport noImage from '../../image/noImage.png';\n\nimport style from './MoviesList.module.scss';\n// import Loader from '../Loader/Loader';\n\n\nconst MoviesList = ({movies, title}) => {\n\n  const location = useLocation();\n\n  return (\n    <div className={style.wrapper}>\n<h2>{title}</h2>\n    <ul className={style.list}>\n    {movies && movies.map(({ poster_path, title, id }) => {\n            return (\n              <li key={id} className={style.item}>\n                <Link\n                  to={{\n                    pathname: `movies/${id}`,\n                    state: { from: location },\n                  }}\n                >\n                  <img\n                  className={style.image}\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : noImage\n                    }\n                    alt={title}\n                  />\n                  <p className={style.title}>{title}</p>\n                </Link>\n              </li>\n            );\n          }) \n        }\n     \n    </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__1AVq6\",\"SearchForm\":\"SearchBar_SearchForm__1ZWK1\",\"SearchButton\":\"SearchBar_SearchButton__2khNB\",\"SearchFormButton\":\"SearchBar_SearchFormButton__2WN0H\",\"SearchInput\":\"SearchBar_SearchInput__Hj4fx\",\"SearchFormInput\":\"SearchBar_SearchFormInput__1Wb6j\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useState} from 'react';\nimport { toast } from 'react-toastify';\n\nimport style from './SearchBar.module.scss';\n\nconst SearchBar = ({onSubmit}) => {\n\n  const [value, setValue] = useState('');\n\nconst handleChange = event => {\n  setValue(event.target.value.toLowerCase());\n};\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  if(value.trim === '') {\n    toast.error(\"You don't load name films\");\n    return;\n  }\n  onSubmit(value);\n  reset();\n};\n\nconst reset = () => {\n  setValue('');\n};\n\n\n\n  return(\n    <div className={style.Searchbar}>\n    <form onSubmit={handleSubmit} className={style.SearchForm}>\n      <button  type=\"submit\" className={style.SearchButton}>\n        <span className={style.SearchFormButton}>Search film</span>\n      </button>\n\n      <input \n         className={style.SearchInput}\n         type=\"text\"\n         value={value}\n         onChange={handleChange}\n         autoComplete=\"off\"\n         autoFocus\n         placeholder=\"Search film\" />\n    </form>\n    </div>\n  )\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport default SearchBar;","import { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\n\nimport {getSearchMovies} from '../../service/api-service';\nimport MoviesList from '../../components/MoviesList';\nimport SearchBar from '../../components/SearchBar';\nimport Loader from '../../components/Loader';\n\n\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchQuery = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    setIsLoading(true);\n    getSearchMovies(searchQuery).then(({results}) => {\n      if (results.length === 0) {\n        toast.error('Please enter new querry!');\n      }\n      setMovies(results)\n      setIsLoading(false)\n    });\n  }, [searchQuery]);\n\n  const HandleOnChangeQuery = queryMovie => {\n    history.push({ ...location, search: `query=${queryMovie}` });\n  };\n\n\n  return (\n    <>\n     <SearchBar onSubmit={HandleOnChangeQuery}/>\n\n       {searchQuery && (\n        <MoviesList\n          movies={movies}\n          title={`Search results for ${searchQuery}`}\n        />\n      )}\n      {isLoading && <Loader />}\n    </>\n  )\n}\n\n\n\nexport default MoviesPage;"],"sourceRoot":""}